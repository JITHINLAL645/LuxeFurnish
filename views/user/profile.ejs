
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>User Profile</title>
        <link rel="stylesheet" href="style.css">
        <style>
       * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-color: #f1f5f8;
    color: #333;
    line-height: 1.6;
    padding: 30px 0;
}

.container {
    width: 90%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 30px;
}

.profile-section, .address-section {
    background-color: #fff;
    border-radius: 8px;
    padding: 30px;
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
    margin-bottom: 30px;
}

.profile-header, .address-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
}

h2 {
    font-size: 26px;
    color: #2c3e50;
    font-weight: 600;
}

button {
    padding: 12px 20px;
    border-radius: 6px;
    cursor: pointer;
    font-size: 14px;
    transition: background-color 0.3s ease, transform 0.2s ease;
}

.logout-button, .add-address-button, .change-password-button {
    background-color: #1c70a9;
    color: #fff;
}
.add-address-button:hover{
background-color: #489bce;
}

 .delete-button{
 padding-left: 50px;
 font-size: large;
 color: #656161;
 font-weight: 700;


}
.edit-button{
    font-size: large;
    color: #656161;
     font-weight: 700;
}


.logout-button {
    background-color: #e74c3c;
}

.logout-button:hover {
    background-color: #c0392b;
    transform: translateY(-2px);
}

.change-password-button {
    background-color: #4CAF50;
}

.change-password-button:hover {
    background-color: #45a049;
    transform: translateY(-2px);
}

.address-list {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
}

.address-item {
    background-color: #f8f9fa;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    width: calc(33.33% - 20px);
    min-width: 270px;
    transition: transform 0.2s ease;
}

.address-item:hover {
    transform: translateY(-5px);
}

.address-item h4 {
    font-size: 18px;
    color: #2c3e50;
    margin-bottom: 10px;
}

.address-item p {
    font-size: 14px;
    color: #7f8c8d;
}

.modal {
    display: none;
    position: fixed;
    z-index: 999;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    justify-content: center;
    align-items: center;
}

.modal-content {
    background-color: #fff;
    padding: 30px;
    border-radius: 8px;
    max-width: 500px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.modal-header, .modal-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 15px;
}

.modal-header h2 {
    font-size: 20px;
    color: #333;
}

.modal-footer button {
    padding: 10px 20px;
    font-size: 14px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.close-button {
    color: #aaa;
    background-color: transparent;
    font-size: 24px;
    font-weight: bold;
    border: none;
    cursor: pointer;
}

.close-button:hover {
    color: #000;
}

.cancel-button {
    background-color: #e74c3c;
    color: white;
}

.cancel-button:hover {
    background-color: #c0392b;
}

.save-button {
    background-color: #2ecc71;
    color: white;
}

.save-button:hover {
    background-color: #27ae60;
}

input[type="password"] {
    width: 100%;
    padding: 12px;
    margin: 10px 0;
    border: 1px solid #ccc;
    border-radius: 6px;
}

.logout-buttonn {
    width: 100%;
    max-width: 250px;
    background-color: #28d16f;
    color: #fff;
    padding: 15px 20px;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-size: 16px;
    margin: 20px auto;
    transition: background-color 0.3s ease;
    margin-left: 100px;
}

.logout-buttonn:hover {
    background-color: #7bd699;
    transform: translateY(-2px);
}

/* Form styling */
.form-group {
    margin-bottom: 20px;
}

.form-group label {
    display: block;
    margin-bottom: 8px;
    font-weight: 600;
    color: #333;
}

.form-group input {
    width: 100%;
    padding: 12px;
    border: 1px solid #ccc;
    border-radius: 6px;
    font-size: 14px;
    color: #555;
}

button[type="submit"] {
    background-color: #4CAF50;
    color: white;
    padding: 12px 20px;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-size: 16px;
    transition: background-color 0.3s ease, transform 0.2s ease;
}

button[type="submit"]:hover {
    background-color: #45a049;
    transform: translateY(-2px);
}

@media (max-width: 768px) {
    .address-item {
        width: 100%;
        margin-bottom: 20px;
    }

    .modal-content {
        width: 90%;
    }
}
/* General List Styling */
ul {
    list-style-type: none; /* Remove bullet points */
    padding: 0;
    margin: 0;
    display: flex; /* Flexbox for horizontal layout */
    justify-content: flex-start; /* Align links to the start */
}

/* List Item Styling */
li {
    margin-right: 15px; /* Spacing between items */
}

/* Link Styling */
li a {
    display: inline-block; /* Make it behave like a button */
    text-decoration: none; /* Remove underline */
    padding: 12px 30px; /* Add padding for a better clickable area */
    background: linear-gradient(135deg, #ff7a7a, #ff4141); /* Gradient background */
    color: white; /* Text color */
    font-size: 16px; /* Font size */
    font-weight: bold; /* Bold text */
    border-radius: 50px; /* Fully rounded corners */
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Soft shadow for depth */
    transition: transform 0.3s ease, background-color 0.3s ease; /* Smooth hover effect */
}

/* Hover Effect */
li a:hover {
    background-color: #ff4141; /* Solid color on hover */
    transform: translateY(-3px); /* Slight lift effect on hover */
}

/* Active/Selected Link Styling */
li a.active {
    background-color: #333; /* Darker background for active link */
    color: #fff; /* White text for active link */
}

/* Responsive Adjustments */
@media (max-width: 768px) {
    ul {
        flex-direction: column; /* Stack items vertically on smaller screens */
        align-items: flex-start;
    }

    li {
        margin-bottom: 10px; /* Add margin below list items */
    }
}




    </style>
    </head>
    <body>
        <section class="profile-section">

            <div class="container">

                <div class="profile-header">
                    <h2>User Profile</h2>
                    <li><a href="/">Home</a></li>
                    <li><a href="order">Orders</a></li>
                    


                    <form action="/userlogout" method="post">
                        
                        <button class="logout-button">Logout</button>
                        
                    </form>

                    

                </div>
                

                <div class="profile-info">
                    <h3>General Information</h3>
                    <p><strong>Username:</strong> <%= user.name %></p>
                    <p><strong>Email:</strong> <%= user.email %></p>
                    <p><strong>Phone:</strong> <%= user.phoneNumber %></p>
                </div>

            </div>

        </section>
        <!DOCTYPE html>
        <html lang="en">

            <body>
                <!-- Button to open the modal -->
                <button class="logout-buttonn" id="openModalBtn">Change
                    Password</button>

                <!-- The Modal -->
                <div id="myModal" class="modal">
                    <div class="modal-content">
                        <span class="close">&times;</span>
                        <h2>Change Password</h2>
                        <form id="passwordForm" method="post"
                            action="/changepassword">
                            <div class="form-group">
                                <label for="current-password">Current
                                    Password</label>
                                <input type="password" id="current-password"
                                    name="currentpassword"
                                    placeholder="Enter current password"
                                    required>
                            </div>
                            <div class="form-group">
                                <label for="new-password">New Password</label>
                                <input type="password" id="new-password"
                                    name="newpassword"
                                    placeholder="Enter new password" required>
                            </div>
                            <div class="form-group">
                                <label for="confirm-password">Confirm
                                    Password</label>
                                <input type="password" id="confirm-password"
                                    name="confirmpassword"
                                    placeholder="Confirm new password" required>
                            </div>
                            <div class="error-message" id="errorMessage"
                                style="color: red; display: none;"></div>
                            <button type="submit">Submit</button>
                        </form>
                    </div>
                </div>

                <script>
        // Validate form before submission
        document.getElementById('passwordForm').onsubmit = function(event) {
            var currentPassword = document.getElementById('current-password').value;
            var newPassword = document.getElementById('new-password').value;
            var confirmPassword = document.getElementById('confirm-password').value;
            var errorMessage = document.getElementById('errorMessage');
    
            // Reset error message
            errorMessage.style.display = 'none';
            errorMessage.textContent = '';
    
            // Check if fields are empty
            if (!currentPassword || !newPassword || !confirmPassword) {
                errorMessage.textContent = 'All fields are required!';
                errorMessage.style.display = 'block';
                event.preventDefault(); // Prevent form submission
                return;
            }
    
            // Check if new password matches confirm password
            if (newPassword !== confirmPassword) {
                errorMessage.textContent = 'New password and confirm password do not match!';
                errorMessage.style.display = 'block';
                event.preventDefault(); // Prevent form submission
                return;
            }
    
            // Check if new password is different from current password
            if (currentPassword === newPassword) {
                errorMessage.textContent = 'New password must be different from the current password!';
                errorMessage.style.display = 'block';
                event.preventDefault(); // Prevent form submission
                return;
            }
        };
    </script>

                <script src="script.js"></script>
            </body>
        </html>

        <div class="container">

            <div class="address-header">
                <h2>Manage Addresses</h2>
                <a href="/addAddresspage">
                    <button class="add-address-button">Add New Address</button>
                </a>
            </div>

            <div class="address-list" id="addressList">
                <% addresses.forEach(user => { %>
                <% user.address.forEach(address => { %>
                <div class="address-item" id="address-<%= address._id %>">
                    <p><strong>Name:</strong> <%= address.firstName %> <%=
                        address.lastName %></p>
                    <p><strong>Email:</strong> <%= address.email %></p>
                    <p><strong>Mobile:</strong> <%= address.phoneNumber %></p>
                    <p><strong>Address:</strong> <%= address.addressLine %></p>
                    <p><strong>Place:</strong> <%= address.place %></p>
                    <p><strong>Street:</strong> <%= address.street %></p>
                    <p><strong>City:</strong> <%= address.city %></p>
                    <p><strong>District:</strong> <%= address.district %></p>
                    <p><strong>State:</strong> <%= address.state %></p>
                    <p><strong>Country:</strong> <%= address.country %></p>
                    <p><strong>Pin Code:</strong> <%= address.pincode %></p>
                    <hr>

                    <!-- Edit and Delete Buttons -->
                    <div class="address-actions">
                        <a href="/editAddresspage/<%= address._id %>" class="edit-button">Edit</a>
                        <a href="#" class="delete-button" onclick="deleteAddress('<%= address._id %>')">Delete</a>
                    </div>
                </div>
                <% }) %>
                <% }) %>
            </div>

            <script>
            // Edit Address: Redirect to the edit page with the address ID
          // Function to delete an address
          async function deleteAddress(addressId) {
  const confirmDelete = confirm("Are you sure you want to delete this address?");
  
  if (!confirmDelete) {
    return; // Do nothing if the user cancels the confirmation
  }

  try {
    // Send DELETE request to the server
    const response = await fetch(`/deleteAddress/${addressId}`, {
      method: 'DELETE'
    });
    
    const result = await response.json();
    
    if (response.status === 200) {
      alert(result.message);
      
      // Remove the address element from the DOM after successful deletion
      const addressElement = document.getElementById(`address-${addressId}`);
      if (addressElement) {
        addressElement.remove(); // Remove the address div from the page
      }
    } else {
      alert(result.message || 'Failed to delete address');
    }
  } catch (error) {
    console.error('Error deleting address:', error);
    alert('Server error. Please try again later.');
  }
}



        </script>

        </div>
        <script>
        // Get modal element
var modal = document.getElementById("myModal");

var openModalBtn = document.getElementById("openModalBtn");

var closeBtn = document.getElementsByClassName("close")[0];
openModalBtn.onclick = function() {
    modal.style.display = "block";
}
closeBtn.onclick = function() {
    modal.style.display = "none";
}
window.onclick = function(event) {
    if (event.target == modal) {
        modal.style.display = "none";
    }
}
    </script>

    </body>
</html>